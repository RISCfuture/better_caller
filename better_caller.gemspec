# Generated by jeweler
# DO NOT EDIT THIS FILE DIRECTLY
# Instead, edit Jeweler::Tasks in Rakefile, and run the gemspec command
# -*- encoding: utf-8 -*-

Gem::Specification.new do |s|
  s.name = %q{better_caller}
  s.version = "0.0.1"

  s.required_rubygems_version = Gem::Requirement.new(">= 0") if s.respond_to? :required_rubygems_version=
  s.authors = ["Tim Morgan"]
  s.date = %q{2009-12-02}
  s.description = %q{A more programmer-friendly call stack complete with bindings for each level: no more string parsing!}
  s.email = %q{better_caller@timothymorgan.info}
  s.extensions = ["ext/extconf.rb"]
  s.extra_rdoc_files = [
    "LICENSE",
     "README.rdoc"
  ]
  s.files = [
    "README.rdoc",
     "ext/better_caller.c",
     "ext/debug.h",
     "ext/dln.h",
     "ext/encdb.h",
     "ext/eval_intern.h",
     "ext/extconf.rb",
     "ext/gc.h",
     "ext/id.h",
     "ext/iseq.h",
     "ext/node.h",
     "ext/parse.h",
     "ext/regenc.h",
     "ext/regint.h",
     "ext/regparse.h",
     "ext/revision.h",
     "ext/thread_pthread.h",
     "ext/thread_win32.h",
     "ext/transcode_data.h",
     "ext/transdb.h",
     "ext/version.h",
     "ext/vm_core.h",
     "ext/vm_exec.h",
     "ext/vm_insnhelper.h",
     "ext/vm_opts.h",
     "spec/better_caller_spec.rb",
     "spec/spec_helper.rb"
  ]
  s.homepage = %q{http://github.com/RISCfuture/better_caller}
  s.rdoc_options = ["--charset=UTF-8"]
  s.require_paths = ["lib"]
  s.rubyforge_project = %q{better_caller}
  s.rubygems_version = %q{1.3.5}
  s.summary = %q{Symbolic call stack with bindings}
  s.test_files = [
    "spec/better_caller_spec.rb",
     "spec/spec_helper.rb"
  ]

  if s.respond_to? :specification_version then
    current_version = Gem::Specification::CURRENT_SPECIFICATION_VERSION
    s.specification_version = 3

    if Gem::Version.new(Gem::RubyGemsVersion) >= Gem::Version.new('1.2.0') then
      s.add_development_dependency(%q<bacon>, [">= 0"])
    else
      s.add_dependency(%q<bacon>, [">= 0"])
    end
  else
    s.add_dependency(%q<bacon>, [">= 0"])
  end
end

